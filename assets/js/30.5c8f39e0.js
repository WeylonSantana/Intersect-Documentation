(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{454:function(t,e,n){"use strict";n.r(e);var r=n(36),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"client-and-editor-config-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#client-and-editor-config-json"}},[t._v("#")]),t._v(" Client and Editor "),n("code",[t._v("config.json")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Name")]),t._v(" "),n("th",[t._v("Type")]),t._v(" "),n("th",[t._v("Example")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Host")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"localhost"')]),t._v(" "),n("td",[t._v("The IP address or host name of the server.")])]),t._v(" "),n("tr",[n("td",[t._v("Port")]),t._v(" "),n("td",[t._v("integer")]),t._v(" "),n("td",[t._v("5400")]),t._v(" "),n("td",[t._v("The port on the server.")])]),t._v(" "),n("tr",[n("td",[t._v("GameFont")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"sourcesansproblack"')]),t._v(" "),n("td",[t._v("The name of the font to use for non-UI rendering.")])]),t._v(" "),n("tr",[n("td",[t._v("EntityNameFont")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"sourcesansproblack"')]),t._v(" "),n("td",[t._v("The name of the font to use for entity names.")])]),t._v(" "),n("tr",[n("td",[t._v("ChatBubbleFont")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"sourcesansproblack"')]),t._v(" "),n("td",[t._v("The name of the font to use for chat bubble text.")])]),t._v(" "),n("tr",[n("td",[t._v("ActionMsgFont")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"sourcesansproblack"')]),t._v(" "),n("td",[t._v("The name of the font to use for action messages.")])]),t._v(" "),n("tr",[n("td",[t._v("UIFont")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"sourcesansproblack,8"')]),t._v(" "),n("td",[t._v("The name and size of the font to use for unstyled windows (such as debug/admin) comma-delimited ("),n("code",[t._v("name,size")]),t._v(").")])]),t._v(" "),n("tr",[n("td",[t._v("ChatLines")]),t._v(" "),n("td",[t._v("integer")]),t._v(" "),n("td",[t._v("100")]),t._v(" "),n("td",[t._v("The number of lines to save for chat scroll-back.")])]),t._v(" "),n("tr",[n("td",[t._v("MenuMusic")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"Game-Menu_Looping.ogg"')]),t._v(" "),n("td",[t._v("The name of the music file to play on the main menu (file must be in "),n("code",[t._v("resources/music")]),t._v(").")])]),t._v(" "),n("tr",[n("td",[t._v("MenuBackground")]),t._v(" "),n("td",[t._v("string[]")]),t._v(" "),n("td",[t._v("Static background Example:"),n("br"),t._v('[ "background.png" ]'),n("br"),n("br"),t._v("Animated background Example:"),n("br"),t._v('[ "background_0.png", "background_1.png", "background_2.png" ],')]),t._v(" "),n("td",[t._v("Sets the main menu's background texture. If the list contains more than 1 texture file, the background will be animated by sequentially drawing them (file(s) must be in "),n("code",[t._v("resources/gui")]),t._v("). "),n("a",{attrs:{href:"https://s3.us-east-2.amazonaws.com/ascensiongamedev/filehost/9b51895eb091e0ca8beeddc46ab4125a.mp4",title:"Click here to watch a walk-through video.",target:"_blank",rel:"noopener noreferrer"}},[t._v("Click here to watch a walk-through video."),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",[t._v("MenuBackgroundDisplayMode")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"Default"')]),t._v(" "),n("td",[t._v("Sets the display mode of the main menu's background."),n("br"),n("code",[t._v("Default")]),t._v(": Default display mode of fullscreen textures."),n("br"),n("code",[t._v("Center")]),t._v(": Positions the texture in the center of the game window."),n("br"),n("code",[t._v("Stretch")]),t._v(": Stretches the texture to the game window size."),n("br"),n("code",[t._v("FitHeight")]),t._v(": Fits the texture to the game window height."),n("br"),n("code",[t._v("FitWidth")]),t._v(": Fits the texture to the game window width."),n("br"),n("code",[t._v("Fit")]),t._v(": Fits the texture to the game window by using the DrawFullScreenTextureFitMaximum method."),n("br"),n("code",[t._v("Cover")]),t._v(": Fits the texture to the game window by using the DrawFullScreenTextureFitMinimum method.")])]),t._v(" "),n("tr",[n("td",[t._v("MenuBackgroundFrameInterval")]),t._v(" "),n("td",[t._v("integer")]),t._v(" "),n("td",[t._v("100")]),t._v(" "),n("td",[t._v("Sets the frames interval (milliseconds) of the main menu's animated background.")])]),t._v(" "),n("tr",[n("td",[t._v("IntroImages")]),t._v(" "),n("td",[t._v("string[]")]),t._v(" "),n("td",[t._v('["logo.png", "sponsor.png"]')]),t._v(" "),n("td",[t._v("A list from which introductory images are drawn when the game client is launched.")])]),t._v(" "),n("tr",[n("td",[t._v("UpdateUrl")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"http://localhost:8080/update.json"')]),t._v(" "),n("td",[t._v("The URL to the update manifest file generated by the editor (see "),n("a",{attrs:{href:"https://docs.freemmorpgmaker.com/en-US/deploy/autoupdater.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Auto Updater"),n("OutboundLink")],1),t._v(").")])]),t._v(" "),n("tr",[n("td",[t._v("MouseCursor")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"defaultcursor.png"')]),t._v(" "),n("td",[t._v("Sets a custom sprite to be used as cursor by the game client (file must be in "),n("code",[t._v("resources/misc")]),t._v(").")])]),t._v(" "),n("tr",[n("td",[t._v("MusicFadeTimer")]),t._v(" "),n("td",[t._v("integer")]),t._v(" "),n("td",[t._v("1500")]),t._v(" "),n("td",[t._v("Determines the time it takes to fade-in or fade-out a song when no other instructions are given.")])]),t._v(" "),n("tr",[n("td",[t._v("EnableContextMenus")]),t._v(" "),n("td",[t._v("boolean")]),t._v(" "),n("td",[t._v("true")]),t._v(" "),n("td",[t._v("Configures whether or not the context menus are enabled upon right-clicking certain elements.")])]),t._v(" "),n("tr",[n("td",[t._v("UiSkin")]),t._v(" "),n("td",[t._v("string")]),t._v(" "),n("td",[t._v('"defaultskin.png"')]),t._v(" "),n("td",[t._v("Configures the name of the UI's skin or skin texture to use (file must end in .png and must be in "),n("code",[t._v("resources/gui")]),t._v(").")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);