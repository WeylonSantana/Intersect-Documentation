(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{568:function(e,a,s){"use strict";s.r(a);var r=s(36),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"compilando"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compilando"}},[e._v("#")]),e._v(" Compilando")]),e._v(" "),s("p",[e._v("El primer paso antes de realizar cambios en el proyecto original es compilar la solución. Intersect se basa en docenas de bibliotecas y herramientas externas (por ejemplo, MonoGame, Newtonsoft Json.Net, etc). Nuestro proyecto está diseñado para buscar las anteriormente mencionadas dependencias de forma automática mediante Nuget.")]),e._v(" "),s("p",[e._v("Para comenzar, abre el archivo Intersect.sln ubicado en la carpeta Intersect-Engine. La solución debería abrirse en Visual Studio 2019.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/bb694eabb570f22d541f87d1db2fc68f.png",alt:"solution"}})]),e._v(" "),s("p",[e._v("En la mayoría de los casos, todo lo que debes hacer es presionar Build (Generar) -> Build Solution (Generar solución) en la parte superior de la ventana de Visual Studio y así obtendrás todas las dependencias necesarias automáticamente.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/c1c27a3366987a9279610e40667eecf0.png",alt:"building"}})]),e._v(" "),s("p",[e._v("Tu primera compilación probablemente fallará con errores similares a los que se ven a continuación. Esto se debe a que el proyecto descarga las dependencias durante la compilación misma, dependencias que son necesarias para una compilación exitosa.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/3ddd530d599409f7a8a69a510fa3ab70.png",alt:"errors"}})]),e._v(" "),s("p",[e._v("Si experimentas los errores anteriores o similares, simplemente haz click en Build (Generar) > Clean Solution (Limpiar solución) y luego en Build -> Build Solution (Generar solución) nuevamente. Si eso no funciona, intenta reiniciar Visual Studio.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/068c7b0d67e8fa94d998f8b2151f98a1.png",alt:"clean"}})]),e._v(" "),s("p",[e._v("Visual Studio te notificará de una compilación exitosa en la esquina inferior izquierda del IDE.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/cfbb467b54914238dcadcde9383f342f.png",alt:"success"}})]),e._v(" "),s("p",[e._v("Podras encontrar la versión compilada de Intersect en el directorio Intersect-Engine/build. Habrá muchos archivos xml junto con los ejecutables, pero por ahora solo deberías preocuparte por los archivos .exe y .pdb para el Cliente, el Editor y el Servidor.")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://www.ascensiongamedev.com/resources/filehost/5c0070679608ae4d663de3bc34c4527b.png",alt:"output"}})]),e._v(" "),s("p",[e._v("** Ten en cuenta que si deseas ejecutar tu cliente o editor utilizando el depurador, deberás "),s("a",{attrs:{href:"https://github.com/AscensionGameDev/Intersect-Assets",target:"_blank",rel:"noopener noreferrer"}},[e._v("Descargar y ubicar estos recursos "),s("OutboundLink")],1),e._v(" en las carpetas /build/debug/client y /build/debug/editor . **")])])}),[],!1,null,null,null);a.default=o.exports}}]);